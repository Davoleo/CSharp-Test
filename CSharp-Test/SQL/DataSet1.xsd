<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DataTestConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DataTestConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CSharp_Test.Properties.Settings.GlobalReference.Default.DataTestConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlacesTableAdapter" GeneratorDataComponentClassName="PlacesTableAdapter" Name="Places" UserDataComponentName="PlacesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataTestConnectionString (Settings)" DbObjectName="dbo.Places" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Places] WHERE (([idPlace] = @Original_idPlace) AND ([name] = @Original_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPlace" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPlace" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Places] ([name]) VALUES (@name);
SELECT idPlace, name FROM Places WHERE (idPlace = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idPlace, name FROM dbo.Places</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Places] SET [name] = @name WHERE (([idPlace] = @Original_idPlace) AND ([name] = @Original_name));
SELECT idPlace, name FROM Places WHERE (idPlace = @idPlace)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPlace" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPlace" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idPlace" ColumnName="idPlace" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idPlace" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idPlace" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idPlace" DataSetColumn="idPlace" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OSTableAdapter" GeneratorDataComponentClassName="OSTableAdapter" Name="OS" UserDataComponentName="OSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataTestConnectionString (Settings)" DbObjectName="dbo.OS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[OS] WHERE (([idOS] = @Original_idOS) AND ([nameOS] = @Original_nameOS) AND ((@IsNull_year = 1 AND [year] IS NULL) OR ([year] = @Original_year)) AND ((@IsNull_averageLicenseCost = 1 AND [averageLicenseCost] IS NULL) OR ([averageLicenseCost] = @Original_averageLicenseCost)) AND ((@IsNull_nextConventionPlace = 1 AND [nextConventionPlace] IS NULL) OR ([nextConventionPlace] = @Original_nextConventionPlace)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idOS" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idOS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nameOS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nameOS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_year" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_year" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_averageLicenseCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="averageLicenseCost" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_averageLicenseCost" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="averageLicenseCost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nextConventionPlace" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nextConventionPlace" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_nextConventionPlace" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nextConventionPlace" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[OS] ([nameOS], [year], [averageLicenseCost], [nextConventionPlace]) VALUES (@nameOS, @year, @averageLicenseCost, @nextConventionPlace);
SELECT idOS, nameOS, year, averageLicenseCost, nextConventionPlace FROM OS WHERE (idOS = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nameOS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nameOS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@year" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@averageLicenseCost" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="averageLicenseCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@nextConventionPlace" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nextConventionPlace" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idOS, nameOS, year, averageLicenseCost, nextConventionPlace FROM dbo.OS</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[OS] SET [nameOS] = @nameOS, [year] = @year, [averageLicenseCost] = @averageLicenseCost, [nextConventionPlace] = @nextConventionPlace WHERE (([idOS] = @Original_idOS) AND ([nameOS] = @Original_nameOS) AND ((@IsNull_year = 1 AND [year] IS NULL) OR ([year] = @Original_year)) AND ((@IsNull_averageLicenseCost = 1 AND [averageLicenseCost] IS NULL) OR ([averageLicenseCost] = @Original_averageLicenseCost)) AND ((@IsNull_nextConventionPlace = 1 AND [nextConventionPlace] IS NULL) OR ([nextConventionPlace] = @Original_nextConventionPlace)));
SELECT idOS, nameOS, year, averageLicenseCost, nextConventionPlace FROM OS WHERE (idOS = @idOS)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nameOS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nameOS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@year" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@averageLicenseCost" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="averageLicenseCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@nextConventionPlace" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nextConventionPlace" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idOS" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idOS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nameOS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nameOS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_year" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_year" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_averageLicenseCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="averageLicenseCost" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_averageLicenseCost" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="averageLicenseCost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nextConventionPlace" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nextConventionPlace" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_nextConventionPlace" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nextConventionPlace" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idOS" ColumnName="idOS" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idOS" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idOS" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idOS" DataSetColumn="idOS" />
              <Mapping SourceColumn="nameOS" DataSetColumn="nameOS" />
              <Mapping SourceColumn="year" DataSetColumn="year" />
              <Mapping SourceColumn="averageLicenseCost" DataSetColumn="averageLicenseCost" />
              <Mapping SourceColumn="nextConventionPlace" DataSetColumn="nextConventionPlace" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1" msprop:Generator_UserDSName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Places" msprop:Generator_TableClassName="PlacesDataTable" msprop:Generator_TableVarName="tablePlaces" msprop:Generator_TablePropName="Places" msprop:Generator_RowDeletingName="PlacesRowDeleting" msprop:Generator_RowChangingName="PlacesRowChanging" msprop:Generator_RowEvHandlerName="PlacesRowChangeEventHandler" msprop:Generator_RowDeletedName="PlacesRowDeleted" msprop:Generator_UserTableName="Places" msprop:Generator_RowChangedName="PlacesRowChanged" msprop:Generator_RowEvArgName="PlacesRowChangeEvent" msprop:Generator_RowClassName="PlacesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idPlace" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidPlace" msprop:Generator_ColumnPropNameInRow="idPlace" msprop:Generator_ColumnPropNameInTable="idPlaceColumn" msprop:Generator_UserColumnName="idPlace" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OS" msprop:Generator_TableClassName="OSDataTable" msprop:Generator_TableVarName="tableOS" msprop:Generator_TablePropName="OS" msprop:Generator_RowDeletingName="OSRowDeleting" msprop:Generator_RowChangingName="OSRowChanging" msprop:Generator_RowEvHandlerName="OSRowChangeEventHandler" msprop:Generator_RowDeletedName="OSRowDeleted" msprop:Generator_UserTableName="OS" msprop:Generator_RowChangedName="OSRowChanged" msprop:Generator_RowEvArgName="OSRowChangeEvent" msprop:Generator_RowClassName="OSRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idOS" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidOS" msprop:Generator_ColumnPropNameInRow="idOS" msprop:Generator_ColumnPropNameInTable="idOSColumn" msprop:Generator_UserColumnName="idOS" type="xs:int" />
              <xs:element name="nameOS" msprop:Generator_ColumnVarNameInTable="columnnameOS" msprop:Generator_ColumnPropNameInRow="nameOS" msprop:Generator_ColumnPropNameInTable="nameOSColumn" msprop:Generator_UserColumnName="nameOS">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="year" msprop:Generator_ColumnVarNameInTable="columnyear" msprop:Generator_ColumnPropNameInRow="year" msprop:Generator_ColumnPropNameInTable="yearColumn" msprop:Generator_UserColumnName="year" type="xs:int" minOccurs="0" />
              <xs:element name="averageLicenseCost" msprop:Generator_ColumnVarNameInTable="columnaverageLicenseCost" msprop:Generator_ColumnPropNameInRow="averageLicenseCost" msprop:Generator_ColumnPropNameInTable="averageLicenseCostColumn" msprop:Generator_UserColumnName="averageLicenseCost" type="xs:double" minOccurs="0" />
              <xs:element name="nextConventionPlace" msprop:Generator_ColumnVarNameInTable="columnnextConventionPlace" msprop:Generator_ColumnPropNameInRow="nextConventionPlace" msprop:Generator_ColumnPropNameInTable="nextConventionPlaceColumn" msprop:Generator_UserColumnName="nextConventionPlace" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Places" />
      <xs:field xpath="mstns:idPlace" />
    </xs:unique>
    <xs:unique name="OS_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:OS" />
      <xs:field xpath="mstns:idOS" />
    </xs:unique>
    <xs:keyref name="FK_Places_OS" refer="Constraint1" msprop:rel_Generator_UserChildTable="OS" msprop:rel_Generator_ChildPropName="GetOSRows" msprop:rel_Generator_UserRelationName="FK_Places_OS" msprop:rel_Generator_ParentPropName="PlacesRow" msprop:rel_Generator_RelationVarName="relationFK_Places_OS" msprop:rel_Generator_UserParentTable="Places" msdata:DeleteRule="None">
      <xs:selector xpath=".//mstns:OS" />
      <xs:field xpath="mstns:nextConventionPlace" />
    </xs:keyref>
  </xs:element>
</xs:schema>